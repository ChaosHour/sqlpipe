{{ template "base" . }}
{{ define "title" -}} Create Transfer {{- end }}
{{ define "main" }}

<div class="d-flex justify-content-center mb-5">
    <div class="d-flex flex-column" style="max-width: 540px; width: 100%;">
        <h5 class="display-5 my-5">{{ template "title" . }}</h5>
        <form action="/ui/create-transfer" method="post">
            <input type='hidden' name='csrf_token' value='{{.CSRFToken}}'>

            <div class="mb-3">
                <label for="sourceId" class="form-label">Source connection</label>
                <select name="sourceId" id="sourceId" class="form-select {{with .Form.Validator.Get "sourceId"}}is-invalid{{end}}">
                    <option selected disabled value="">Select</option>
                    {{ range .Connections }}
                    <option value="{{ .ID }}">{{ .Name }}</option>
                    {{ end }}
                </select>
                {{with .Form.Validator.Get "sourceId"}}
                <div class="invalid-feedback">{{.}}</div>
                {{end}}
            </div>

            <div class="mb-3">
                <label for="targetId" class="form-label">Target connection</label>
                <select name="targetId" id="targetId" class="form-select {{with .Form.Validator.Get "targetId"}}is-invalid{{end}}">
                    <option selected disabled value="">Select</option>
                    {{ range .Connections }}
                    <option value="{{ .ID }}">{{ .Name }}</option>
                    {{ end }}
                </select>
                {{with .Form.Validator.Get "targetId"}}
                <div class="invalid-feedback">{{.}}</div>
                {{end}}
            </div>

            <div class="mb-3">
                <label for="targetSchema" class="form-label">Target Schema</label>
                <input class="form-control {{with .Form.Validator.Get "targetSchema"}}is-invalid{{end}}" id="targetSchema"
                    name="targetSchema" value='{{.Form.Get "targetSchema"}}'>
                {{with .Form.Validator.Get "targetSchema"}}
                <div class="invalid-feedback">{{.}}</div>
                {{end}}
            </div>

            <div class="mb-3">
                <label for="targetTable" class="form-label">Target Table</label>
                <input class="form-control {{with .Form.Validator.Get "targetTable"}}is-invalid{{end}}" id="targetTable"
                    name="targetTable" value='{{.Form.Get "targetTable"}}'>
                {{with .Form.Validator.Get "targetTable"}}
                <div class="invalid-feedback">{{.}}</div>
                {{end}}
            </div>

            <div class="mb-3">
                <label for="query" class="form-label">Query</label>
                <textarea rows=5 class="form-control {{with .Form.Validator.Get "query"}}is-invalid{{end}}" id="query"
                    name="query">{{.Form.Get "query"}}</textarea>
                {{with .Form.Validator.Get "query"}}
                <div class="invalid-feedback">{{.}}</div>
                {{end}}
            </div>


            <div class="d-flex justify-content-between">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="overwrite" name="overwrite" 
                    {{if eq (.Form.Get "overwrite" ) "on" }}checked{{end}} data-bs-toggle="tooltip" data-bs-placement="top"
                        title="Overwrite target table upon insertion">
                    <label class="form-check-label" for="skipTest">Overwrite</label>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </form>
    </div>
</div>
{{ end }}